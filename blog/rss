<?xml version="1.0" encoding="utf-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog Feed</title>
    <link>https://obsproject.com/blog</link>
    <lastBuildDate>Tue, 02 May 2023 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://obsproject.com/blog/rss" rel="self" type="application/rss+xml" />
            <item>
      <title>OBS Studio 29 Release Notes</title>
      <link>https://obsproject.com/blog/obs-studio-29-release-notes</link>
      <guid>https://obsproject.com/blog/obs-studio-29-release-notes</guid>
      <pubDate>Tue, 02 May 2023 00:00:00 +0000</pubDate>
      <description><![CDATA[<h2>OBS Studio 29.1</h2>
<h3>New Features and Additions</h3>
<ul>
<li>Added support for streaming AV1/HEVC over Enhanced RTMP [YouTube/yuriy-chunak/derrod]<ul>
<li>Enhanced RTMP V1 extends the RTMP protocol to support newer video codecs and HDR. More info at: <a href="https://github.com/veovera/enhanced-rtmp">https://github.com/veovera/enhanced-rtmp</a></li>
<li>Currently only supported by/enabled for YouTube as a beta feature</li>
<li>HDR is not yet implemented</li>
</ul>
</li>
<li>Added support for multiple audio tracks in Simple output recording [pkv]</li>
<li>Added a DLL blocking feature for Windows. This allows OBS to block problematic DLLs from attaching to OBS and causing freezing or crashes, for example 3rd party overlay hooks and outdated video capture devices. [notr1ch]<ul>
<li>This blocks old versions of popular VTubing software virtual cameras that are known to cause freezes when accessing video capture device properties. If you are affected, please update to the latest version of your VTubing software.</li>
</ul>
</li>
<li>Added settings to select the audio encoder for streaming and recording [tytan652]</li>
<li>Added an option to preload media sources used in Stingers to memory, to avoid frame skips during transitions [Lain]</li>
<li>Added Update Channels on macOS and updated Sparkle for smaller and faster updates going forward [derrod]</li>
<li>Added compatibility notices in the Window and Game Capture sources for Windows [derrod]</li>
<li>Added the ability to zoom browser docks with Ctrl - and + and the right click menu [WizardCM]</li>
<li>Added a setting to record in fragmented MP4 and MOV formats [derrod]<ul>
<li>These offer greater compatibility than MKV while providing similar resilience against data loss due to crashes, running out of space, etc.</li>
<li>Fragmented MP4 and MOV files can be remuxed to regular MP4/MOV in cases where the former may not be read correctly (e.g. in older editing software)</li>
</ul>
</li>
<li>Added support for surround sound for AJA capture cards [paulh-aja]</li>
<li>Added ProRes 4444 (XQ) support for VideoToolbox encoder on macOS [jpark37]</li>
<li>Added lossless audio recording options (FLAC/ALAC/PCM including 32-bit float) [derrod]</li>
<li>Added indicator if an audio source is unmuted, but not assigned to any audio tracks [derrod]</li>
<li>Added AMD AV1 encoder to simple output mode [notr1ch]</li>
</ul>
<h3>General Changes</h3>
<ul>
<li>Increased the minimum macOS version to macOS 11.0 [PatTheMav]</li>
<li>Output rescaling is ignored if the scaled resolution matches the current video output resolution [notr1ch]</li>
<li>NVENC error messages now include more details [notr1ch]</li>
<li>Changed the default FFmpeg AAC encoder to twoloop which has higher quality [norihiro]</li>
<li>Allow symbolic links for VST paths [tuduweb]</li>
<li>Implemented QVBR for AMF encoders [flaeri]</li>
<li>Expanded support for subtitle tracks in VLC source (up to 1000) [jjm2473]</li>
<li>The Hotkeys tab in settings is no longer loaded until switched to, resulting in the Settings window opening much faster for large scene collections [derrod]</li>
<li>Switched various internal data structures to use hash tables for lookups, resulting in significant performance and loading/saving time improvements with large scene collections [derrod]</li>
<li>Exported scene collection JSON is now pretty-printed and sorted, allowing for easier tracking via git or other versioning mechanisms [derrod]</li>
<li>Added a "What's New" entry in the help menu to manually open the post-update changelog dialog [derrod]</li>
<li>Clicking the "Defaults" button in properties will now ask for confirmation before resetting [derrod]</li>
<li>Improved Windows OBS updater speed and reduced download size by using Zstandard compression [derrod]</li>
<li>Added platform-specific "What's New" notifications to better communicate changes or issues not affecting all operating systems [derrod]</li>
<li>Added option to force SDR Window Capture capture in Windows 10+ mode [jpark37]</li>
<li>Improved YouTube thumbnail preview by using bilinear scaling [derrod]</li>
<li>Incompatible audio/video encoders will now be disabled based on the selected format [derrod]</li>
<li>Added HEVC and HDR support to VA-API encoder [yuriy-chunak]</li>
<li>Added HDR capture support for DeckLink sources [jpark37]</li>
<li>Video-related items in the right click menu of audio sources in the Sources list will no longer appear [cg2121]</li>
<li>Native macOS dialogs now respect OBS being set to dark themes [gxalpha]</li>
<li>Significantly improve screen capture performance on Intel dedicated GPUs on Linux [kkartaltepe]</li>
<li>JACK inputs on Linux will now display "OBS Studio" in their name to clarify their origin. This may cause existing configured devices to stop working until updated by the user [univrsal]</li>
<li>The system color selection dialog is now used on macOS [gxalpha]</li>
<li>Various improvements to the t-bar for a more predictable user experience [gxalpha]</li>
<li>Plugins installed system-wide are no longer loaded when OBS is run in Portable Mode [gxalpha]</li>
<li>Hardware Decoding of Media Sources can now use CUDA [rjgtav]</li>
<li>Improved DeckLink performance [jpark37]</li>
<li>Python 3.11 is now supported in Scripting [RytoEX]</li>
<li>Added FDK AAC support on Flatpak [tytan652]</li>
<li>Browser docks now provide a "Copy page address" option [WizardCM]</li>
<li>Increased the maximum resolution of browser sources to 8192x8192 [fungiboletus]</li>
<li>OBS Websocket has been updated to 5.2 [RytoEX]</li>
<li>Changed Add Source menu to sort case-insensitively [gxalpha]</li>
<li>Improved default buffering behavior for most Elgato video capture devices on Windows [FBirth]</li>
<li>Added codec logging for the QSV encoder [RytoEX]</li>
<li>Made hotkey edit layout margins symmetrical [gxalpha]</li>
<li>Added logging if the active encoder is incompatible with dynamic bitrate [pkv]</li>
</ul>
<h3>Bug Fixes</h3>
<ul>
<li>Fixed output silently not starting when using multi-track audio at higher frame rates [kkartaltepe]</li>
<li>Fixed dynamic bitrate changes not working when using NVENC presets p6 or p7 [pkv]</li>
<li>Fixed encoder settings not being updated if the encoder is changed in settings [tytan652]</li>
<li>Fixed a crash that could occur when using a video source that frequently changed its resolution (e.g. a VLC playlist) [notr1ch]</li>
<li>Fixed a crash that could occur when using streams in the media source (introduced in v29) [notr1ch]</li>
<li>Fixed an issue with negative gain in upward compressor [pkv]</li>
<li>Fixed several bugs in FFmpeg custom output related to color conversion [flaeri]</li>
<li>Fixed UI unresponsiveness when searching for hotkeys and duplicate key assignments in large collections [derrod]</li>
<li>Fixed an issue with RTMP timeouts that could cause a server to think OBS has cleanly ended the connection instead of it disconnecting due to an error, and not activating features like "disconnect protection" [notr1ch]</li>
<li>Fixed properties being cut off until window is resized [derrod]</li>
<li>Fixed portable Windows versions not restarting in portable mode after an update [derrod]</li>
<li>Fixed updating of an install being blocked by unrelated OBS instances running [derrod]</li>
<li>Fixed excessive config reads when sources are selected in the preview [derrod]</li>
<li>Fixed audio track assignments of sources provided by third-party plugins being reset when the plugin could not be loaded [derrod]</li>
<li>Fixed invalid rescaled resolutions being allowed when they shouldn't be [tuduweb]</li>
<li>Fixed presets in the Expander filter not applying changes immediately [tuduweb]</li>
<li>Fixed the virtual camera on Windows reporting the incorrect resolution to external apps, resulting in stretched images [exeldro]</li>
<li>Fixed the ability to drag and drop scenes after clicking Rename and not changing the name of the Scene [cg2121]</li>
<li>Fixed a crash on macOS that would occur when an external display with an active Projector was disconnected [PatTheMav]</li>
<li>Fixed an issue where remuxing a .ts file would fail [tuduweb]</li>
<li>Fixed an issue with the VLC source where large videos (e.g. 4K) would get squashed horizontally [CoalZombik]</li>
<li>Fixed spacing helpers appearing incorrectly when a source is rotated and flipped [cg2121]</li>
<li>Fixed an issue where the preview would display incorrectly when zoomed too far in either direction [cg2121]</li>
<li>Fixed the macOS virtual camera potentially crashing external apps and recordings to be the wrong length [mac-cain13]</li>
<li>Various fixes for monitoring when using PulseAudio [kkartaltepe]</li>
<li>Fixed a crash on shutdown with virtual camera on Linux [kkartaltepe/norihiro]</li>
<li>Fixed an issue in the V4L2 source on Linux where a capture device's frame rate could be invalid, resulting in incredibly large log files [9p4]</li>
<li>Fixed the listing of PulseAudio monitoring devices incorrectly listing inputs [jp-bennett]</li>
<li>Fixed the preview having the ability to scroll infinitely out of view when scaled manually [cg2121]</li>
<li>Fixed the Async Filters list showing incompatible async filters for synchronous sources [gxalpha]</li>
<li>Fixed an issue where the cursor would not properly disappear in certain games on Wayland [rmngr]</li>
<li>Fixed an issue where certain filters would not properly update when clicking the Defaults button [gxalpha]</li>
<li>Fixed an issue with FFmpeg NVENC producing invalid DTS when using b-frames [RytoEX/flaeri/derrod/tt2468]</li>
<li>Fixed an issue where network sources in the Media Source could cause rendering/UI freezes when they reconnect [tt2468]</li>
<li>Fixed AAC encoding of 2.1 audio [pkv]</li>
<li>Fixed an issue where pressing Space would unexpectedly pause the active media source when the main window was focused [cg2121]</li>
<li>Fixed an issue where duplicating scenes would lose colour coding on sources [cg2121]</li>
<li>Browser dock Inspect will now remember settings and customizations [WizardCM]</li>
<li>Fixed a case where HDR -&gt; SDR might not tonemap correctly [jpark37]</li>
<li>Fixed simple mode replay buffer maximum not being set [derrod]</li>
<li>Fixed Windows-only RTMP options (e.g., Network Optimizations) causing issues if the profile was imported on non-Windows with those enabled [tytan652]</li>
<li>Fixed security software status logs showing as blank when running on non-English locales [notr1ch]</li>
<li>Fixed a bug where certain system localizations couldn't load Lua files on Windows [exeldro]</li>
<li>Fixed Screen Capture crashing in the Flatpak with old versions of PipeWire server [tytan652]</li>
<li>Fixed an issue where Push to Talk on Linux wouldn't work when assigned to secondary mouse buttons [KasinSparks]</li>
<li>Fixed CBR padding when using NVENC AV1/HEVC [derrod]</li>
<li>Fixed Auto Scene Switcher not saving settings correctly [PatTheMav]</li>
<li>Fixed AMF encoder crashing when streaming by temporarily disabling dynamic bitrate when it is in use [derrod]</li>
<li>Fixed recordings made with Apple VT Hardware encoders in CRF mode only having one initial keyframe [derrod]</li>
<li>Various improvements and fixes to Decklink performance [jpark37]</li>
<li>Fixed transparent windows capturing incorrectly on Wayland using PipeWire [asahilina]</li>
<li>Fixed an issue with the source rotation handle when source is flipped [cg2121]</li>
<li>Fixed a crash in Decklink Output when no Decklink device is available [jpark37]</li>
</ul>
<h2>OBS Studio 29.0.2</h2>
<ul>
<li>Fixed a bug introduced in 29.0.1 which caused sources with an upward compressor filter to stop audio playback under certain circumstances [notr1ch/pkv]</li>
</ul>
<h2>OBS Studio 29.0.1</h2>
<ul>
<li>Fixed the "NVIDIA AUDIO Effects SDK is outdated" message appearing on the noise reduction filter properties when the SDK wasn't installed [notr1ch]</li>
<li>Fixed a crash that could happen if you use NVIDIA's audio effect filters and then later uninstall the SDK [pkv]</li>
<li>Fixed the expander and upward compressor audio filters sounding distorted [pkv/norihiro]</li>
<li>Added "Knee Width" option to the upward compressor audio filter to improve quality [pkv/norihiro]</li>
<li>Fixed a bug where overriding the theme on Linux could cause the program not to start up [kkartaltepe]</li>
<li>Fixed software rendering not working properly on Linux [columbarius]</li>
<li>Fixed a bug where the Stats window/panel would show an incorrect disk space calculation when pausing recordings [notr1ch]</li>
<li>Fixed a bug on Windows where the "Force SDR" setting in window capture wasn't showing up [jpark37]</li>
<li>Fixed a bug on macOS where the virtual camera would show up red [PatTheMav]</li>
<li>Fixed a bug where Linux captures would not work correctly on X11 [kkartaltepe]</li>
<li>Fixed a crash on Linux when using Wayland and trying to use the automatic scene switcher [GeorgesStavracas]</li>
<li>Fixed a bug where alpha wouldn't output properly when setting OBS to use BGRA color format [jpark37]</li>
<li>Fixed a crash on startup when OBS was minimized [derrod]</li>
<li>Fixed a bug where projectors could look washed out when projecting SDR content while using an HDR display [jpark37]</li>
<li>Fixed a bug on Windows where secondary displays could sometimes not show up in the display capture properties [jpark37]</li>
<li>Fixed a crash when using the virtual camera as an OBS source and changing the canvas resolution [notr1ch]</li>
<li>Fixed a bug on macOS where the properties window would go behind the main window after opening a file selection dialog [gxalpha]</li>
<li>Fixed a bug where profile encoder settings would not properly update when switching between services that require a different encoder [tytan652]</li>
<li>Fixed a bug in custom ffmpeg output mode where RTMP would force certain encoders [flaeri]</li>
</ul>
<h2>OBS Studio 29.0</h2>
<h3>New Features and Additions</h3>
<ul>
<li>Added support for the AMD AV1 Encoder for the RX7000 series GPUs on Windows [AMD/Lain]</li>
<li>Added support for the Intel AV1 Encoder for Arc GPUs on Windows [Intel/Lain]<ul>
<li>Note: CQP is available but not fully supported</li>
</ul>
</li>
<li>Added support for the Intel HEVC Encoder on Windows [yuriy-chumak/rcdrone/Lain]</li>
<li>Added an upward compressor filter [pkv]</li>
<li>Added a 3-band equalizer filter [Lain]</li>
<li>Added support for native HEVC and ProRes encoders on macOS, including P010 and HDR [Developer-Ecosystem-Engineering/PatTheMav/gxalpha]</li>
<li>Added support for macOS Desk View [Developer-Ecosystem-Engineering]</li>
<li>Added update channels for opting into receiving beta/release-candidate builds to Windows [Rodney]<ul>
<li>Work is still underway to get everything ready on the server side, updating via the built-in updater may not be available until later in the OBS 30.0 beta-testing period</li>
</ul>
</li>
<li>Websockets updated to 5.1.0, which has a number of bug fixes, UI improvements, and new stream reconnect events. [tt2468]</li>
</ul>
<h3>General Changes</h3>
<ul>
<li>The Replay Buffer's memory limit is now set to 75% of installed system RAM rather than fixed to 8GB [Rodney]</li>
<li>Added media key support in Linux [kkartaltepe]</li>
<li>Various improvements to NVIDIA Video and Audio filters, including a Mask Refresh slider and support for temporal processing, which provides better quality masking [pkv]</li>
<li>Improved Display Capture screen naming &amp; saving on Windows; indexes should now match regardless of Mode, and reconnected displays should show the correct monitor [jpark37]<ul>
<li>Note: This does mean existing Display Capture sources will be blank until manually configured, to avoid showing the wrong display</li>
</ul>
</li>
<li>Added support for encryption and authentication for SRT and RIST outputs [pkv]</li>
<li>Disabled ScreenCaptureKit Display &amp; App capture on macOS 12 due to various issues; users should either update to macOS 13 or use the existing Screen Capture source [PatTheMav]</li>
<li>Removed the automatic numbering on Multiview labels [Warchamp7]</li>
<li>Added the ability to mute individual browser docks [WizardCM]</li>
<li>Added the ability to right click and 'Inspect' individual browser docks [WizardCM]</li>
<li>Changed the default Simple Output NVENC preset to P5 for better compatibility &amp; performance [RytoEX]</li>
<li>Added support for higher refresh rates in the Video Capture Device source on Windows [WizardCM/EposVox]</li>
<li>Added the Apple VT Hardware encoder to the Auto Configuration Wizard [gxalpha]</li>
<li>Improved FFmpeg VA-API enablement by directly using Libva to check device capabilities [tytan652]</li>
<li>Various minor UX/accessibility tweaks in the UI [Warchamp7/cg2121]</li>
<li>Raised the speed at which dynamic bitrate recovers after a drop [Lain]</li>
<li>Audio should now be automatically captured for most capture card brands using the Video Capture Device source on Windows [WizardCM/EposVox]</li>
<li>Added a slide counter to the Source Toolbar when an Image Slide Show is selected [cg2121]</li>
</ul>
<h3>Bug Fixes</h3>
<ul>
<li>Fixed issues with async filters (such as Delay) not rendering correctly [jpark37]</li>
<li>Various performance improvements to Decklink preview output [jpark37]</li>
<li>Fixed an issue where source Projector windows wouldn't close when a source was deleted [cg2121]</li>
<li>Fixed an issue where cursors would disappear or display incorrectly on screen captures on Windows [caesay]</li>
<li>Fixed issues with CQP rate control for SVT and AOM AV1 encoders [flaeri]</li>
<li>Fixed an issue with CQP rate control for AMD HEVC and H264 [flaeri]</li>
<li>Fixed Virtual Camera not working with Webex and GoToMeeting [Lain]</li>
<li>Fixed capturing UHD/4K YUV on the AJA Kona HDMI [paulh-aja]</li>
<li>Fixed a bug where slideshow sources wouldn't remove cleared files when removing missing files [gxalpha]</li>
<li>Fixed slideshow counter on the source context toolbar showing "1/0" when empty, now shows "-/-" instead [cg2121]</li>
<li>Fixed chroma location for VAAPI [jpark37]</li>
<li>Fixed a case where macOS' VideoToolBox HEVC encoder would be parsed as AVC [jpark37]</li>
<li>Allow SRT streams to disconnect after timeout [pkv]</li>
<li>Fixed color space being incorrect for some video devices running in MJPEG video format on Windows [jpark37]</li>
<li>Fixed monitor names in the Fullscreen Projector &amp; Multiview menus on Windows [WizardCM]</li>
</ul>]]></description>
    </item>
        <item>
      <title>OBS Studio and obs-websocket Join Forces</title>
      <link>https://obsproject.com/blog/obs-studio-and-obs-websocket-join-forces</link>
      <guid>https://obsproject.com/blog/obs-studio-and-obs-websocket-join-forces</guid>
      <pubDate>Wed, 03 Aug 2022 00:00:00 +0000</pubDate>
      <description><![CDATA[<p>Right around 8 months ago, Palakis and I were approached by the members here at the OBS Project with an idea: Make WebSocket functionality a core feature of OBS Studio. On July 3rd, I was pleased to announce the standalone release of obs-websocket version 5. This version is a complete rewrite of the popular plugin obs-websocket. With over a year of development finally behind us, this version brings a new protocol, many great features, and greatly improved reliability. You can see the notable changes <a href="https://github.com/obsproject/obs-websocket/wiki/Notable-changes-between-4.x-and-5.x">here</a>.</p>
<p>While the release is a standalone plugin meant to be run with OBS Studio 27.2, we will be including version 5 with all downloads of OBS Studio starting with version 28.0.0. Including obs-websocket v5 by default will help drive adoption of the new protocol, and we expect it to benefit the third-party scripts and tools ecosystem long-term by bringing official support to the API that many of them depend on.</p>
<p>To install 5.0.1, check out the <a href="https://github.com/obsproject/obs-websocket/releases/tag/5.0.1">release available on GitHub</a>. Please bear in mind that obs-websocket v5 uses a new protocol that not all tools support, so you may need to additionally install the 4.9.1-compat version to continue using those tools. For a list of software tools that already support the new protocol, see <a href="https://github.com/obsproject/obs-websocket#client-software">here</a>.</p>
<p>Many existing tools will require the previous version of obs-websocket, 4.9.1-compat, in order to continue working until such time as those tools are updated. This version can be installed alongside v5 and will not conflict, and can safely be removed at a later date once any tools you may be using are updated to the new version. That version can be found alongside the download links for 5.0.1 on the release page.</p>
<p>We do have a <a href="https://discord.gg/WBaSQ3A">Discord Server</a> dedicated to obs-websocket where you can participate in discussions and get help for the plugin. If you'd like to contribute towards furthering obs-websocket development, we have a dedicated <a href="https://opencollective.com/obsproject/projects/obs-websocket-dev">Open Collective</a> page. Thank you to those who have faithfully contributed via Open Collective thus far!</p>]]></description>
    </item>
        <item>
      <title>What happened with 27.2: The tale of a legendary hotfix</title>
      <link>https://obsproject.com/blog/the-tale-of-a-legendary-hotfix</link>
      <guid>https://obsproject.com/blog/the-tale-of-a-legendary-hotfix</guid>
      <pubDate>Wed, 23 Feb 2022 00:00:00 +0000</pubDate>
      <description><![CDATA[<p>That was a crazy week. Let’s talk about what happened with 27.2 and what we had to do this past week.</p>
<p>With the Windows version of 27.2, we updated all of our dependencies. A dependency is a library made from external source code; something which is not OBS source code, but that OBS depends upon for major functionality and features. Sometimes this can be a feature such as software H.264 encoding, which relies on the x264 encoder library, or a feature such as the browser source, which relies on a much bigger dependency: Chromium (the browser engine that powers Google Chrome). More specifically, the browser source utilizes the Chromium Embedded Framework (CEF) to render a webpage as a source, or to render a webpage as a panel inside of OBS.</p>
<p>On Windows, before OBS 27.2, our browsers were stuck on Chromium version 75 because we had to use a complex custom Chromium patch to be able to use it with reasonable performance, and that patch was incompatible with newer versions. Chromium 75 was almost three years old as of 27.2, and many important features and changes have been added to Chromium since then; features and changes which are essential to modern production components such as stream overlays and advanced production displays. It was getting very outdated, so needless to say, it was a high priority for us to update Chromium as a dependency, and thanks to the effort of OBS Project members Pat, Dillon, Matt, pkv, as well as some wonderful people who contribute to the Chromium Embedded Framework, we were finally able to update it to version 95.</p>
<p>However, updating dependencies, especially dependencies that large, can pose some challenges: during the 27.2 release, we started to get sporadic reports of people’s entire computers freezing, requiring a full system reboot. We immediately began investigating, and at first I slowed, then eventually reverted the release of 27.2 as more reports came in confirming the issue. On the first day after 27.2, we were frantically trying to find affected users who would have the patience to allow us to examine and understand what was happening. Fortunately, we found some very kind users who were able to force a bluescreen during the system freeze and generate debug dump files of their system kernels. This allowed us to get the first hint of what was happening: it was very likely a bug in the graphics driver. We noticed it was centered around graphics operations, and it was only happening with one graphics card manufacturer. Fortunately, we have contacts with all the major graphics card manufacturers, so we immediately got in contact with them to file a driver bug report.</p>
<p>Being that we were in no position to expect a graphics card manufacturer to debug and fix a suspected driver bug in a timely manner, let alone expect users to update to those drivers within any reasonable timeframe after their release, we had no choice: either find a workaround soon, or revert Chromium back to version 75. Considering so much effort in this update was spent updating Chromium to improve stream production features for users, reverting Chromium back to 75 was not the option I wanted to take. I had to do something, and soon, as Twitch was deprecating their v5 API in two weeks, meaning that old versions of OBS would no longer be able to use the “Connect Account” feature with Twitch.</p>
<p>R1CH, a contributor to OBS, had figured out a way to reproduce the system freeze: add a bunch of very active browser sources, and run OBS in 1300/1 fractional framerate (i.e. 1300 frames per second). This did the trick, and we were now able to reproduce the issue ourselves and debug it a bit more easily. While debugging the bluescreen kernel dumps, I immediately suspected what the problem was likely triggered by: the IDXGIKeyedMutex API. This API is used to lock and synchronize shared graphics memory between two different processes or threads on the system; our latest Chromium update had been modified to use it, a big change from how Chromium 75 functioned. Being that I am incredibly stubborn, and being that I already hated that API, around two or three days after 27.2 was released, I decided that I had to find out whether or not that was the trigger. For the next day or so after that, I modified and compiled Chromium to remove IDXGIKeyedMutex almost everywhere I could see it. Because Chromium is such a monumentally large project involving tens of millions of lines of code, and because it uses so many layers of abstraction and interprocess communication, I had doubts I would be able to accomplish it; some of our contributors suggested we should just let it go and revert back to Chromium 75. But being incredibly stubborn, after a few days of learning how Chromium works internally, I managed to remove almost all usage of keyed mutexes.</p>
<p>And I couldn’t believe it: it solved the system freeze. It did the trick! I felt like Luke Skywalker in the Death Star’s garbage compactor right after it was deactivated.</p>
<p>However, it introduced a new issue: although it solved the system freeze issue, removing synchronization inevitably caused frame stuttering and frame pacing issues when rendering the browser source. It was noticeable enough that I knew that my job wasn’t finished. For the next sleepless day or two after that, in an attempt to solve this issue, I went to work trying to figure out some other way to synchronize textures shared between Chromium and OBS. Coupled with the fact that Chromium code is so incredibly abstract and relies on so many different separate independent interprocess parts working together, it made the task incredibly difficult. After a day or two of no success, another contributor had suggested that I just let it go, and that it was good enough as-is, and that we had the v5 API deadline. I originally conceded, and let it go, but that same night while I was in the shower, I had an idea of how to solve it!</p>
<p>After that shower, I told the other contributors that I’m going to try one last thing that night, and that if I couldn’t do it before the night was over, I’d give up. In an all-or-nothing last-ditch effort, I spent the rest of the night reprogramming a couple key parts of Chromium to share a single texture with OBS, which would be automatically updated by a simple copy operation from the backbuffer texture: the same exact way that the patch for version 75 accomplished it.</p>
<p>My effort proved fruitful, and not only did it fix the frame stuttering issue, but it also vastly improved performance of the Chromium 95 build. Not only did we fix the system freeze and fix frame stuttering, we also greatly improved browser source performance!</p>
<p>Words can’t describe how good it felt. My elation went from simply getting out of the garbage compactor on the Death Star to blowing up the entire Death Star in one fell swoop. We tested it with everyone we could: everyone confirmed that all of their issues were fixed, and that the browser source was performing better than ever. After an entire week of sleepless toil, we’re now here with 27.2.1, a legendary hotfix. It was the worst week of my life that somehow turned into the best week of my life.</p>
<p>I want to make a big shout out to the very patient users who purposely crashed their PCs to get us kernel dumps, a big shout out to R1CH for figuring out a way to reproduce the system freeze reliably, and a big shoutout to Matt, pkv, Flaeri, Shaolin, RytoEX, Ace, and everyone else who spent time testing different builds on different systems. Thank you all. Without all of our wonderful contributors working together, none of this would have been possible.</p>
<p>What an incredibly crazy week. I can finally get some sleep again.</p>]]></description>
    </item>
        <item>
      <title>OBS and Streamlabs Commit to Long-Term Collaboration</title>
      <link>https://obsproject.com/blog/obs-and-streamlabs-commit-to-long-term-collaboration</link>
      <guid>https://obsproject.com/blog/obs-and-streamlabs-commit-to-long-term-collaboration</guid>
      <pubDate>Fri, 24 Dec 2021 00:00:00 +0000</pubDate>
      <description><![CDATA[<p>First and foremost, we want to thank you all again for your incredible outpouring of love and support for OBS. Everyone on the team is incredibly thankful and humbled by your enthusiasm for what we do.</p>
<p>Second, we wanted to share some positive news: In the past few weeks, Lainand the team have been in discussion with Streamlabs to have a transparent conversation on trust and partnership, and together, we now have a plan moving forward.</p>
<p>Both of our teams have a shared mission to support streamers, and the industry is better when we can all work together. We are happy to have Streamlabs support the project in the long-term so we can continue to build tools for the community.</p>
<p>We would like to thank the team at Streamlabs for listening and taking immediate action to resolve the issues that led to the current situation. While past actions cannot be changed, we look forward to a fresh start.</p>
<p>To all of you: thank you once more for being so supportive, and stay tuned for more updates!</p>
<p>Best,<br />
The OBS Team</p>]]></description>
    </item>
        <item>
      <title>Announcing the OBS Project Bounty Program</title>
      <link>https://obsproject.com/blog/announcing-the-obs-project-bounty-program</link>
      <guid>https://obsproject.com/blog/announcing-the-obs-project-bounty-program</guid>
      <pubDate>Thu, 05 Aug 2021 00:00:00 +0000</pubDate>
      <description><![CDATA[<p>When we first announced that the OBS Project would begin accepting sponsorships over two years ago, our primary goal was to promote the sustainability of OBS development for its contributors. Through your generosity, we’ve grown to be able to support <a href="https://obsproject.com/blog/dillon-pentz-joins-the-obs-project-as-full-time-developer">two full-time developers</a>, as well as give back to several contributors from the community in appreciation of their work. And for that, we are extremely grateful!</p>
<p>However, for some time now, we’ve wanted to make our sponsorship funds go even farther. That’s why, today, we’re announcing the <strong>OBS Project Bounty Program</strong>. This new program allows us to share our highest priorities with the developer community and provide compensation for the developers who offer their time and expertise to meet those needs.</p>
<p>Bounties have long been a staple tool of open source projects to help focus community development efforts on a project’s most pressing needs. By assigning bounties to select features and bugs with well-defined completion parameters, we will be able to effectively fuel development in a manner that both aligns with the project’s goals and supports the developers who put in the work to make it happen. We are (and continue to be) immensely grateful for the work of our community contributors, and we hope that bounties will be a way that we can support those contributors as they continue to give their time to the project.</p>
<p>To start out, we have published a small list of features which we have already set a bounty on. While not all of these features are at the very top of our current priority list, they are manageable and impactful enough that they can serve as a useful test bed for the bounty program in order to iron out any issues we might have in the bounty program’s implementation.</p>
<p>To see the list of currently-open bounties, click <a href="https://github.com/obsproject/obs-studio/discussions/categories/requests-for-proposals-bounties">here</a>.</p>
<h2>Meeting the Challenges of a Bounty Program</h2>
<p>Bounty programs are not a new concept in open source projects, but their implementations have had mixed results. We spent a great deal of time considering how we might avoid most of the common problems encountered by other projects, which lead us to the following principles:</p>
<ul>
<li><strong>Curated</strong>: Instead of maintaining an open bounty submission process, bounties will be defined and published by the OBS development team in an effort to ensure that development efforts are directed toward the project’s current goals and priorities. Bounty amounts will be set according to the estimated difficulty of the feature, as well as the general utility/demand for the feature.</li>
<li><strong>Well-defined</strong>: Bounties will be written such that the criteria under which the bounty will be considered complete are made as explicit as possible. We want to remove as much ambiguity as possible in the development process to reduce the chance of conflict between bounty developers and the OBS development team during the development process.</li>
<li><strong>Non-competitive</strong>: We want to avoid a situation where the release of a bounty kicks off a race where multiple developers compete to be the first to submit a pull request that meets the bounty requirements, as we believe that would foster an unhealthy community atmosphere, waste developer time, and produce lower-quality code. Instead, we will be following a request for proposals process. Essentially, the bounty posting itself will serve as a general specification, and will solicit proposals from would-be developers to describe how they would implement the bounty. One of these proposals will be selected, and we will guide that developer to ensure that the development of the feature or bugfix is executed in a timely and maintainable manner.</li>
</ul>
<p>For more details on the processes and procedures we will be following for this bounty program, please see the documentation <a href="https://github.com/obsproject/obs-studio/wiki/OBS-Project-Bounty-Program">here</a>.</p>
<h2>Bounty Program FAQ</h2>
<p><strong>Q.</strong> Where does the money come from to pay for these bounties?<br />
<strong>A.</strong> <em>Bounties will be funded through the project’s Open Collective fund, which is paid for by our generous community of financial supporters and sponsors. We have set up a <a href="https://opencollective.com/obsproject/projects/obs-project-bounty-program">&ldquo;OBS Project  Bounty Program&rdquo; project</a> on our collective page that is explicitly set aside to compensate developers who are completing bounties and other community development projects.</em></p>
<p><strong>Q.</strong> How can I contribute money to increase a specific bounty’s payout?<br />
<strong>A.</strong> <em>Inside the “OBS Project Bounty Program” project on Open Collective, when you make a contribution, you may select which bounty you wish to earmark the funds for, or simply contribute to the general bounty fund instead. While this is not ideal, as it’s not possible to see in real-time how much money is currently allocated to a specific bounty, it should suffice for the time being until the Open Collective platform supports such features.</em></p>
<p><strong>Q.</strong> I want to contribute toward the development of a specific feature, but I don’t see a bounty for it. How can I contribute toward it? Can I set my own bounty?<br />
<strong>A.</strong> <em>We are curating the features that we choose to set bounties on for the time being, as we want to ensure that development efforts are put toward the items that we are prioritizing as a project right now. Furthermore, for the initial bounty period, we are limiting the features for which we are setting bounties so that we can iron out any issues with the process before we begin work on expanding the list of available bounties. In the meantime, you can contribute directly to the general bounty fund instead, if you wish.</em></p>
<p><strong>Q.</strong> How does the bounty program and the idea of Requests For Proposals (RFPs) relate to the current Request For Comments (RFCs) system that is already in place?<br />
<strong>A.</strong> <em>The RFC system is largely a place for contributors to propose changes to the program and solicit feedback before starting work on a project. As such, by its very nature, it has an open submission process that allows anyone to author an RFC. The bounty program, instead, serves as a place for the core developers of the OBS Project to explicitly solicit proposals for development on specific features that we want to prioritize, rather than maintain an open platform for feature submissions. It’s entirely possible that, in the future, we may issue grants to people who develop RFCs so that they can work on the implementation of their feature ideas. However, that prospect is something to consider for the future as we attempt to keep the system as simple as possible while it gets off the ground for now.</em></p>]]></description>
    </item>
        <item>
      <title>Dillon Pentz Joins the OBS Project as Full Time Developer</title>
      <link>https://obsproject.com/blog/dillon-pentz-joins-the-obs-project-as-full-time-developer</link>
      <guid>https://obsproject.com/blog/dillon-pentz-joins-the-obs-project-as-full-time-developer</guid>
      <pubDate>Tue, 03 Aug 2021 00:00:00 +0000</pubDate>
      <description><![CDATA[<p>Today we're pleased to announce the addition of <a href="https://github.com/VodBox">Dillon Pentz</a> as a full time developer for the OBS Project. Dillon has been a regular community contributor since 2017, working on features such as screen reader improvements, transition previews, and the new “missing files” dialog.</p>
<figure class="centered"><img alt="Missing Files dialog" src="https://obsproject.com/media/pages/blog/dillon-pentz-joins-the-obs-project-as-full-time-developer/aa60c8c2fb-1628029915/missing_files.png"><figcaption><em>The Missing Files dialog, one of the major new features in OBS Studio 27, was developed by Dillon</em></figcaption></figure>
<p>Dillon started working on the project full time in May 2021, but our efforts were focused on getting v27 released and we didn’t have a chance to announce it at the time. His initial focus on the project is going to be accessibility features, starting with more improvements to the user interface for colorblind users.</p>
<figure class="centered"><img alt="Upcoming Color Accessibility Menu" src="https://obsproject.com/media/pages/blog/dillon-pentz-joins-the-obs-project-as-full-time-developer/bd9212437a-1628029936/colorblind.png"><figcaption><em>Sneak preview of a new UI feature designed to accommodate colorblind users</em></figcaption></figure>
<p>While other major contributors to the project have received individual payments as thanks for their work in the past, Dillon is the second developer to be paid to work on OBS on a full-time basis, alongside Lain Bailey.</p>
<p>It's all thanks to the amazing support of <a href="https://obsproject.com/contribute">our backers and sponsors</a> that we're able to have people dedicate their time to working on OBS, so thank you all for your contributions! If you’d like to contribute, you can support the OBS Project via <a href="https://opencollective.com/obsproject">Open Collective</a> or <a href="https://www.patreon.com/obsproject">Patreon</a>.</p>
<p>You can <a href="https://twitter.com/Dillon_Pentz">follow Dillon on Twitter @Dillon_Pentz</a>.</p>]]></description>
    </item>
        <item>
      <title>OBS Studio 27 Released, Featuring Undo/Redo, Browser Docks on macOS, Linux, and more</title>
      <link>https://obsproject.com/blog/obs-studio-27-released</link>
      <guid>https://obsproject.com/blog/obs-studio-27-released</guid>
      <pubDate>Tue, 01 Jun 2021 00:00:00 +0000</pubDate>
      <description><![CDATA[<p>After an extensive testing period, we’re happy to announce that OBS Studio 27 is now available for everyone! If you already have OBS installed, the next time you launch it you’ll receive an update alert. If you’re downloading OBS for the first time, or would like to use a portable version, you can <a href="https://obsproject.com/download">download it from our website</a>. If you dismiss the update notification, it can be triggered manually from the Help menu on both Windows and macOS.</p>
<p>Thanks to all who downloaded test builds, reported bugs, and verified that bugs were fixed during the testing period via the <strong>#beta-testing</strong> channel on <a href="https://discord.gg/obsproject">our Discord</a>. Every report means less of a reason to make a hotfix in the coming days, and ultimately results in a better experience for everyone.</p>
<p>Check out the video below for an overview of the biggest changes, or read on for all the details.</p>
<figure class="bp_video"><iframe allowfullscreen src="https://www.youtube.com/embed/LUkMxYNIyj0"></iframe></figure>
<h2>Undo / Redo</h2>
<p>Thanks to contributor Programatic, one of the featured additions in this update is Undo / Redo. OBS has a lot of moving parts, which allows for the creation of very advanced and complex productions. This also means that one wrong move can result in hours of re-adjustment and tweaking.</p>
<p>For this reason, Undo has been on the radar for a while. Back in 2018, Lain wrote   </p>
<h5><em>This is on the agenda. Fortunately, it's not a "difficult" feature to write, it's actually pretty simple, but the implementation is what's delicate, and requires a fair amount of experience to get right.</em></h5>
<p>Undo is built to track actions that affect the preview. This means every potential modification to scenes, sources, groups, filters, stingers, and scripts. These have the potential to affect the feed in real-time, without a chance to “Apply” changes, and can sometimes result in complex changes that are harder to quickly revert or recreate. The Undo stack is capable of tracking the last 5,000 actions of the session, and is cleared when switching scene collections or restarting the app.</p>
<h2>Improved Display Capture for Laptops</h2>
<p>Thanks to contributor jpark37, Display Capture on laptops now allows for capturing displays on different GPUs. This requires no user configuration, making it easier than ever for users to get started creating amazing content.</p>
<p>Most laptops are equipped with a power saving GPU designed for light workloads, and a high-performance GPU designed for 3D rendering. While this is great for portability and your battery, it does mean an app running on one can’t always interact well with the other.</p>
<p>When laptop capture mode is enabled, a yellow border will be displayed around the selected display (but not in the output), indicating that it’s using Windows Graphics Capture. Just like Window Capture for hardware accelerated apps like Google Chrome, this border is handled by Windows itself and cannot currently be turned off — but a future Windows 10 update will provide the option to hide it.</p>
<h2>Missing Files Dialog</h2>
<p>Thanks to contributor Dillon, it is now much easier to catch which sources are missing files, similar to other video production apps. Simply launch OBS or switch scene collections to be notified.</p>
<p>All built-in sources are supported, including the Browser and VLC Video. Third party plugins will have to integrate manually, so keep an eye out for updates. Using the dialog, users have the option of manually choosing a new folder/file, or clearing the source’s selected path. If all files are in the same folder, they’ll automatically be detected when a file is chosen.</p>
<p>In this release, the dialog will only search through the same directory for other missing files. Support for automatically searching in nearby parent folders and subfolders is planned for a future update.</p>
<h2>Source Visibility Transitions</h2>
<p>Thanks to contributor exeldro, transitions can now be applied to scene items when toggled. This allows for much more professional-looking productions without requiring complex scene collections, macros or additional tools.</p>
<h2>Service Integration and Browser Docks on macOS and Linux</h2>
<p>Thanks to contributors tbodt and cg2121, browser capabilities across all platforms are now at feature parity. Browser docks have been available on Windows for a while now and we’re really excited to finally bring them to macOS and Linux after a lot of hard work. This means Twitch and Restream account linking, including built-in chat inside OBS Studio itself.</p>
<p>Custom Browser Docks can be defined in the View -&gt; Docks menu, allowing you to add any other useful sites and pages you’d like direct access to from within the app.</p>
<h2>Wayland on Linux</h2>
<p>Thanks to contributor GeorgesStavracas, Wayland is now natively supported. Linux distributions and desktop environments have been working towards Wayland for many years now, and the importance of being compatible with it increased together with its adoption.</p>
<p>This release makes it possible to run OBS as a native Wayland application, and capture windows and monitors on Wayland environments. Capturing uses PipeWire and XDG Portals to operate, which enable secure, performant, stable captures. These are emergent technologies that may not be available on certain Linux distributions.</p>
<p>On our Ubuntu PPA, Wayland support is only available for Ubuntu 21.04 onward. OBS is also published on Flathub with Wayland support.</p>
<figure><a href="https://flathub.org/apps/details/com.obsproject.Studio" rel="noopener noreferrer" target="_blank"><img alt="Download on Flathub" src="https://obsproject.com/media/pages/blog/obs-studio-27-released/cde558c636-1622595794/flathub-badge-en.png"></a></figure>
<h2>Noise Removal, powered by NVIDIA Broadcast on Windows</h2>
<p>Thanks to contributor pkviet, the built-in Noise Suppression filter now supports NVIDIA Noise Removal. OBS Studio comes bundled with two existing noise removal methods known as Speex and RNNoise. This update lets users with supported NVIDIA GPUs and the <a href="https://www.nvidia.com/en-us/geforce/broadcasting/broadcast-sdk/resources/">NVIDIA Broadcast Audio Effects SDK</a> installed use the noise removal technology of NVIDIA Broadcast as a Noise Suppression filter.</p>
<h2>Track Matte Stingers</h2>
<p>Thanks to contributor Palakis, stingers are now capable of showing elements from both the previous and next scene at the same time. In this initial release, the stinger and track matte videos must be stitched together into a single file and the stinger must contain alpha.</p>
<p>Videos can either be side-by-side with the stinger on the left, or stacked with the stinger on the top. In the track matte, black represents the previous scene, white represents the next scene, and shades of grey in between appear as a cross-fade between the two scenes. For more information check <a href="https://obsproject.com/wiki/Getting-Started-With-Track-Matte-Stinger-Transitions">Getting Started with Track Matte Stinger Transitions</a> on the wiki.</p>
<p>For those looking to try out this new feature, we have provided some free samples to use: <a href="https://cdn-fastly.obsproject.com/downloads/TrackMatteStingers.zip">Free Track Matte Stingers</a></p>
<hr />
<p>For the full changelog and list of bug fixes, <a href="https://github.com/obsproject/obs-studio/releases/tag/27.0.0">take a look at the Release on GitHub</a>.</p>]]></description>
    </item>
        <item>
      <title>YouTube Becomes Premier Sponsor of the OBS Project</title>
      <link>https://obsproject.com/blog/youtube-becomes-premier-sponsor-of-the-obs-project</link>
      <guid>https://obsproject.com/blog/youtube-becomes-premier-sponsor-of-the-obs-project</guid>
      <pubDate>Mon, 07 Dec 2020 00:00:00 +0000</pubDate>
      <description><![CDATA[<p><a href="https://www.youtube.com"><figure class="centered"><img alt="YouTube Logo" src="https://obsproject.com/media/pages/blog/youtube-becomes-premier-sponsor-of-the-obs-project/1608ce4062-1618879601/yt_logo_mono_dark_small.png"></figure></a></p>
<p>We're excited to announce that YouTube has become a premier sponsor of the OBS Project! Since the earliest days of the program, a large number of our users have used OBS to create video content specifically for YouTube, whether live-streamed or recorded for post-production. We're incredibly humbled to have YouTube, the largest content creation platform on the internet, as one of our sponsors.</p>
<p>YouTube is a pillar of creativity in the internet community, serving as a nexus for people to share all kinds of content, including live performances, live streams of video game content, educational resources, product reviews, comedy sketches, and much more. It pioneered a new generation of video content across TV, computer and mobile devices, while also providing a platform that allows anyone to create and grow a career out of video content creation.</p>
<p>The OBS Project team is proud to have a role in serving content creators on YouTube with free and open source tools, and are incredibly grateful to YouTube for supporting us as we continue to meet those needs!</p>]]></description>
    </item>
        <item>
      <title>Five simple tips for new streamers</title>
      <link>https://obsproject.com/blog/five-simple-tips-for-new-streamers</link>
      <guid>https://obsproject.com/blog/five-simple-tips-for-new-streamers</guid>
      <pubDate>Wed, 25 Mar 2020 00:00:00 +0000</pubDate>
      <description><![CDATA[<p>With lots of folks staying in as a result of COVID-19, there's a good chance that some of y'all who play games will want to get started with streaming. It's a great thing to do while we all maintain distance, since it allows you to be social and talkative, get friends involved, and have a great time online. OBS Studio has made streaming easier than ever to get started with, and all for absolutely no cost. If you want to get that side of things set up, <a href="https://obsproject.com/wiki/OBS-Studio-Quickstart" rel="noopener noreferrer" target="_blank">check out our quick start guide</a>! (or, <a href="https://www.youtube.com/watch?v=5rlrDIwnGGQ&amp;t=0s&amp;list=PLT3Ure7_kYHwj8oT3AV-pZ4_r7yp6mDg-" rel="noopener noreferrer" target="_blank">check out Nerd or Die&rsquo;s Quick Start Guide videos</a>!)</p>
<p>With that in mind, here's a handful of tips to help you get started streaming! Some of these may even help you if you're a more experienced streamer, or if you just need a refresher.</p>
<h2>Keep yourself up-to-date.</h2>
<p>There’s lots of moving pieces in the world of game streaming, and lots of things to keep yourself up to date on. Before you go live, make sure that you have the latest updates for OBS Studio, your games, your operating system, and your graphics drivers installed and ready to go.</p>
<p>Keeping yourself up to date will mean you always have access to the latest features and fixes in any software. It also means that you’ll be able to play multiplayer games without issue.</p>
<p>It’s also a good idea to keep up to date on what your streaming service is doing, as they may be adding new features you can take advantage of!</p>
<h2>Save overlays, alerts, and tech for later.</h2>
<p>Lots of people use overlays, and alerts, or they invest in expensive mics and hardware to help them stream. You do not need to do this to start streaming. You also don’t even need to use OBS: modern consoles like the Xbox One or PS4 have built-in tools to help you go live.</p>
<p>Use what you have to start, and keep things as simple as possible. Don’t worry too much about alerts, overlays, mic quality, etc. Make sure that you like streaming, and if you want to continue doing it, think about what you want to invest in first (if anything).</p>
<p>If you decide to invest in new tech, I recommend investing in lighting and microphones first, cameras second, and anything else after that.</p>
<h2>Ignore your viewer count</h2>
<p>Don't stress if nobody comes around. Ignoring your viewer count, and always talking as if someone's watching is the right way to go about this. Ignoring chat isn't as good an idea, but ignoring your viewer count will keep you focused on the game, and take away a source of anxiety for new streamers. </p>
<p>Here are a couple of ideas and questions to help you keep talking:</p>
<ul>
<li>Talk about what your strategy is right now. Are you planning things out ahead? On your way to finish a quest?</li>
<li>Comment on things in the environment. Is anything interesting standing out to you in the world?</li>
<li>What is the game making you feel right now?</li>
<li>What is the game doing that you like? </li>
<li>What's it doing that you don't like? How would you improve it?</li>
</ul>
<h2>Play what you love</h2>
<p>It's easy to see when a streamer isn't passionate about or interested in what they're playing. Faking interest doesn't work, and chasing after numbers and only playing the most popular games will burn you out very quickly. </p>
<p>Start with stuff that you know you love already before you branch out into trying new games that you're interested in! Don't play something just because it's the most popular thing online at the moment, and build your community around the games you love. Keep that in mind and your stream will be better for it. You might even show someone their new favorite game!</p>
<h2>Save some games for yourself</h2>
<p>Playing everything on stream will turn every game into work. There's a risk that when you do that, you won't feel satisfied when you play games on your own time.</p>
<p>There's an easier than expected solution to that though: save games for yourself.</p>
<p>As a personal example, I don't stream the Yakuza games because those games are very special to me. They’re narrative and writing heavy, so they’re hard to stream as is. Instead of trying to force myself to stream them, I save them for my off time, and I enjoy them more as a result. Having games to play in your off-time is essential if you want to continue to stream long-term, so choose a handful of games that you don't want to stream. Doing this will make sure you also continue to enjoy gaming in your spare time, otherwise it can just feel like you’re doing work all the time.</p>
<h2>In conclusion</h2>
<p>That's it! That's five super easy tips to help you while you get started streaming! </p>
<p>There are a ton of other resources out there once you're more comfortable with the basics. When you’re ready, learn more about the tools at your disposal. OBS, for example, has a wiki with all sorts of guides - not just for troubleshooting, but to expand your skills and to use OBS to its full potential. The best part is, you get to learn at your own pace. Happy streaming!</p>
<p><em>This article was edited by Lain, Matt, Melody and Llaren; thanks for helping with this!<br />
Jessica can be found <a href="https://twitter.com/tielqt" rel="noopener noreferrer" target="_blank">@tielqt</a> on Twitter.</em></p>]]></description>
    </item>
        <item>
      <title>Facebook Becomes a Premiere Sponsor of the OBS Project</title>
      <link>https://obsproject.com/blog/facebook-becomes-a-premiere-sponsor</link>
      <guid>https://obsproject.com/blog/facebook-becomes-a-premiere-sponsor</guid>
      <pubDate>Wed, 19 Feb 2020 00:00:00 +0000</pubDate>
      <description><![CDATA[<p><a href="https://facebook.com"><figure class="centered"><img alt="Facebook Logo" src="https://obsproject.com/media/pages/blog/facebook-becomes-a-premiere-sponsor/b64c5f8954-1618091058/fb-corporate-small.png"></figure></a></p>
<p>We are excited to announce that Facebook is the newest Premiere Sponsor of the OBS Project!</p>
<p>Facebook has long believed in the power of live video to build community, and because of that, they have shown a passion for supporting the livestreaming industry. Their decision to become a Premiere Sponsor of the OBS Project ensures people everywhere will continue to have access to free, open, and easy-to-use tools to stream the content they love to the world.</p>
<p>When we launched our <a href="https://obsproject.com/blog/new-ways-to-support-obs-development">sponsorship program</a> just over one year ago, our desire was to provide ways for those that find value in the project to give back and help fund its continued development and improvement. Since then, we’ve seen an outpouring of generosity from members of the industry and community in support of our efforts. We created the Premiere Sponsorship tier to recognize those who have gone above and beyond expectations in their contributions to the project, and to them we are extremely thankful!</p>
<p>Because of Facebook’s contributions, we’re exploring growing our team and the potential of funding members of our development community as they work on a myriad of individual projects aimed at improving the functionality of OBS.</p>
<p>On a personal note, I can't begin to express how grateful I am for all the support that's come from the industry and the community: our sponsors, contributors, volunteers, and especially all of our users. Without the support that everyone has given, none of this could have happened. I realize now that I started something that has enabled so many people to connect to one another on a level I couldn't even imagine. I'm immensely grateful to be a part of it.</p>]]></description>
    </item>
      </channel>
</rss>